{"version":3,"file":"index.js","mappings":"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","sources":["webpack://MyLibrary/webpack/universalModuleDefinition","webpack://MyLibrary/webpack/bootstrap","webpack://MyLibrary/webpack/runtime/define property getters","webpack://MyLibrary/webpack/runtime/hasOwnProperty shorthand","webpack://MyLibrary/webpack/runtime/make namespace object","webpack://MyLibrary/./src/lib/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MyLibrary\"] = factory();\n\telse\n\t\troot[\"MyLibrary\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","class GraphletJS {\n\n  constructor() {\n    console.log(\"Lib constructor called\", this.myVar);\n    this.crudList('dancetastic')\n  }\n\n  myVar = true;\n\n  /**************/\n  /**** utils ***/\n  /**************/\n\n  genRandomToken = (list, len) => {\n    let newId = [...Array(len)]\n                   .map(() => Math.floor(Math.random() * 16)\n                      .toString(16)).join('')\n\n    // uniqueness check if there's a list to check against\n    if (list && list.length > 0) {\n      let idsList = list.filter(node => node['core_props']['id'] === newId)\n      if (idsList.length > 0) {\n        newId = this.getRandomToken(list, len)\n      }\n    }\n\n    return newId\n  }\n\n  doesKeyExist = (node, key) => {\n    return Object.keys().includes(key) ? true : false\n  }\n\n  doesValTypeMatch = (key, val) => {\n    let keyType = key.slice(0,3)\n    if (keyType === 'rel') {\n      keyType = 'arr'\n    } else {\n      keyType = null\n    }\n\n    let valType = Object.prototype.toString.call(val).slice(8,11).toLowerCase()\n\n    return keyType === valType\n  }\n\n  getDateUpdatedObj = (name) => {\n    return { \"user\": name,\n             \"timestamp\": Date.now() }\n  }\n\n  /**************************************/\n  /** crudList highest level functions **/\n  /**************************************/\n\n  renderHelp = () => {\n    console.log('\\n\\nHELP\\n====\\nmethod')\n    console.log('INIT_LIST ....... create a list containing one Label object')\n    console.log('VALIDATE_OBJECT ...')\n    console.log('VALIDATE_LIST .....')\n    console.log('CREATE')\n    console.log('READ')\n    console.log('UPDATE')\n    console.log('DELETE\\n')\n  }\n\n  initLabelObject = (list, user) => {\n    return {\n      \"core_props\": {\n        \"id\": this.getRandomToken(list, 16),\n        \"date_updated\": [{\n          \"user\": user,\n          \"timestamp\": Math.floor(Date.now()/1000)\n        }],\n        \"label\": \"Label\"\n      },\n      \"label_props\": {\n        \"strLabel\": \"Label\",\n        \"strLabelDescription\": \"A capitalized single word...\",\n        \"relRelatedNodes\": []\n      }\n    }\n  }\n\n  initList = (list, user) => {\n    console.log('initList', user)\n    if (!user || user === '') {\n      console.log('ERROR: USER_STR_INVALID', user)\n      return null\n    }\n\n    return [this.initLabelObject(list, user)]\n  }\n\n  validateList = (list, nodeToValidate, fixNode) => {\n    let message = \"INCOMPLETE\"\n\n    // Does the list exist?\n\n    // Does at least one original Label object exist?\n\n    // Do all nodes in the list pass the validity check?\n\n    // Are there any orphans?\n       // return a list of their ids\n\n    // Are there any duplicate ids?\n       // if you fix, propagate to related nodes\n       // and report the changes\n\n    // Generate a label node from a node's label_props\n    // in case that label node does not exist\n\n    return message\n\n  }\n\n  validateObject = (list, fixList) => {\n    let message = \"INCOMPLETE\"\n    // TODO: where does obj come from? it needs an assignment\n    let obj\n\n    // Check that only the desired two keys are present\n    let keys = Object.keys(obj)\n    let flag = keys.includes('core_props') && keys.includes('label_props') && keys.length === 2\n    message = \"SUCCESS\"\n\n    // Check that all related node ids are valid ids\n\n    // Check that all related nodes contain a backlink in one of their relProps\n\n    // Check that all core_props keys and desired value types are as expected\n\n    // Check that all label_props keys begin with\n\n    // Check that all label_props keys' prefixes correspond to the value types\n\n    // CHeck that every node has a \"relRelatedNodes\" label_prop\n\n    message = \"INCOMPLETE\"\n    return message\n  }\n\n  validateUniqueId = (list, nodeId, fixUniqueness) => {\n    let message = \"INCOMPLETE\"\n\n    // get an array of indices of all matching objects\n\n    let indexes = list.map((node, idx) => node['core_props']['id'] === nodeId\n                                          ? idx\n                                          : null).filter(String);\n\n    if (indexes.length === 0) {\n      console.log(\"ID NOT FOUND\")\n    } else if (indexes.length > 1) {\n      console.log(\"MULTIPLE IDS FOUND\")\n      console.log(\"if fixUniqueness is true, will attempt to fix and return fixed list\")\n    } else {\n      console.log(\"NODE ID EXISTS AND IS UNIQUE\")\n    }\n\n    return message\n  }\n\n\n  getListOfLabels = (list, returnType) => {\n    list = list.filter(node => node['core_props']['label'] === 'Label')\n    if (returnType === 'ids') {\n      return list.map(node => node['core_props']['id'])\n    } else {\n      return list\n    }\n  }\n\n\n  getNodesByKeyPair = (list, keyset, key, val,\n                       returnType, firstOnly, labelToFilter) => {\n    let listToReturn = []\n\n    if (labelToFilter) {\n      listToReturn = list.filter(node => node['core_props']['label'] === labelToFilter\n                                         && node[keyset][key] === val)\n    } else {\n      listToReturn = list.filter(node => node[keyset][key] === val)\n    }\n\n    if (returnType === 'objects') {\n      if (firstOnly) {\n        return [listToReturn[0]]\n      } else {\n        return listToReturn\n      }\n    } else if (returnType === 'ids') {\n      if (firstOnly) {\n        return [listToReturn.map(node => node['core_props']['id'])[0]]\n      } else {\n        return listToReturn.map(node => node['core_props']['id'])\n      }\n    } else {\n      console.log('ERROR_INVALID_RETURNTYPE')\n      return []\n    }\n  }\n\n\n  getListOfRelNodes = (sourceNode, returnType) => {\n\n    let listToReturn = []\n\n    let keys = Object.keys()\n                 .filter(key => key.slice(0,3) === 'rel')\n\n    for (let k=0; k < keys.length; k++) {\n      let idList = sourceNode['label_props'][k]\n      for (let i=0; i < idList.length; i++) {\n        listToReturn.push(idList[i])\n      }\n    }\n\n    return listToReturn\n  }\n\n  /**************/\n  /** crudList **/\n  /**************/\n\n  crudList = (op, options) => {\n\n    switch(op) {\n      case 'HELP':  // done\n        return this.renderHelp()\n\n      case 'INIT_LABEL_OBJECT':  // done\n        return this.initLabelObject(options[\"list\"],\n                               options[\"user\"])\n\n      case 'INIT_LIST':  // done\n        return this.initList(options[\"list\"],\n                        options[\"user\"])\n\n      case 'VALIDATE_OBJECT':\n        return this.validateObject(options[\"list\"],\n                              options[\"nodeToValidate\"],\n                              options[\"fixNode\"])\n\n      case 'VALIDATE_LIST':\n        return this.validateList(options[\"list\"],\n                            options[\"fixList\"])\n\n      case 'VALIDATE_UNIQUE':\n        return this.validateUniqueId(options[\"list\"],\n                                options[\"nodeId\"],\n                                options[\"fixUniqueness\"])\n\n      case 'READ_LIST_OF_LABELS':\n        return this.getListOfLabels(options[\"list\"],\n                               options[\"returnType\"])\n\n      case 'READ_NODE_BY_KEYPAIR':\n        return this.getNodeByKeypair(options[\"list\"],\n                                options[\"keyset\"],\n                                options[\"key\"],\n                                options[\"val\"],\n                                options[\"returnType\"],\n                                options[\"firstOnly\"],\n                                options[\"labelToFilter\"])\n\n      case 'CREATE_NODE_FROM_LABEL':\n        return this.getNodeFromLabelObj(options[\"list\"],\n                                   options[\"label\"])\n\n      case 'ADD_NODE':\n        return this.addNode(options[\"list\"],\n                       options[\"nodeToAdd\"])\n\n      case 'REMOVE_NODE':\n        return this.removeNode(options[\"list\"],\n                          options[\"nodeToRemove\"])\n\n      case 'UPDATE_CHANGE_ID':\n        return this.changeNodeIdInList(options[\"list\"],\n                                  options[\"nodeToUpdate\"],\n                                  options[\"oldId\"],\n                                  options[\"newId\"])\n\n      case 'UPDATE_ADD_KEYPAIR':\n        return this.updateAddKeypair(options[\"list\"],\n                                options[\"nodeToUpdate\"],\n                                options[\"keyset\"],\n                                options[\"keyToAdd\"],\n                                options[\"valToAdd\"])\n\n      case 'UPDATE_REMOVE_KEYPAIR':\n        return this.updateRemoveKeypair(options[\"list\"],\n                                   options[\"nodeToUpdate\"],\n                                   options[\"keyset\"],\n                                   options[\"keyToRemove\"])\n\n\n      case 'UPDATE_RENAME_KEY':\n        return this.updateRenameKey(options[\"list\"],\n                               options[\"nodeToUpdate\"],\n                               options[\"keyset\"],\n                               options[\"oldKey\"],\n                               options[\"newKey\"])\n\n      case 'UPDATE_CHANGE_VALUE':\n        return this.updateChangeVal(options[\"list\"],\n                               options[\"nodeToUpdate\"],\n                               options[\"keyset\"],\n                               options[\"key\"],\n                               options[\"newVal\"])\n\n      default:\n        console.log(\"NO_OPS_PERFORMED\")\n        return null\n    }\n  }\n\n}\n\nexport default GraphletJS;\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","list","len","newId","Array","map","Math","floor","random","toString","join","length","filter","node","getRandomToken","keys","includes","val","keyType","slice","toLowerCase","name","Date","now","console","log","user","initLabelObject","nodeToValidate","fixNode","fixList","nodeId","fixUniqueness","indexes","idx","String","returnType","keyset","firstOnly","labelToFilter","listToReturn","sourceNode","k","idList","i","push","op","options","renderHelp","initList","validateObject","validateList","validateUniqueId","getListOfLabels","getNodeByKeypair","getNodeFromLabelObj","addNode","removeNode","changeNodeIdInList","updateAddKeypair","updateRemoveKeypair","updateRenameKey","updateChangeVal","this","myVar","crudList"],"sourceRoot":""}